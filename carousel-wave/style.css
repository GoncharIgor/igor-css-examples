/* https://www.youtube.com/watch?v=2_H0Y6BePys */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --index: calc(1vw + 1vh); /* proportion of screen dimensions, for responsive items */
    --transition: cubic-bezier(.1, .7, 0, 1); /* animation speed */
}

body {
    background-color: #141414;
}

.wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
}

.items {
    display: flex;
    gap: .4rem;
    perspective: calc(var(--index) * 35);
}

.item {
    background-color: #222; /* background is needed to show itself while image is being loaded */
    width: calc(var(--index) * 3);
    height: calc(var(--index) * 9);
    background-size: cover;
    background-position: center;
    cursor: pointer;
    transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
    will-change: transform, filter; /* good for performance */
    filter: grayscale(1) brightness(.5);
}

/* hack to avoid losing hovered state of the item because of the gap between them */
.item::before, .item::after {
    content: '';
    position: absolute;
    right: calc(var(--index) * -1.5);
    width: 20px;
    height: 100%;
}

.item::after {
    left: calc(var(--index) * -1.5);
}

/* Central item */

.items .item:hover {
    transform: translateZ(calc(var(--index) * 10));
    filter: inherit; /* to remove filters from parent .item */
}

/* Right */

.items .item:hover + * { /* 1-st sibling after hovered element */
    transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
    filter: inherit;
    z-index: -1;
}

.items .item:hover + * + * { /* 2-nd sibling after hovered element */
    transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
    filter: inherit;
    z-index: -2;
}

.items .item:hover + * + * + * {
    transform: translateZ(calc(var(--index) * 2.4)) rotateY(30deg);
    filter: inherit;
    z-index: -3;
}

.items .item:hover + * + * + * + * {
    transform: translateZ(calc(var(--index) * .6)) rotateY(14deg);
    filter: inherit;
    z-index: -4;
}

/* Left */

.item:has(+ :hover) { /* 1-st sibling before hovered element */
    transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    filter: inherit;
}

.item:has(+ * + :hover) {
    transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    filter: inherit;
}

.item:has(+ * + * + :hover) {
    transform: translateZ(calc(var(--index) * 2.4)) rotateY(-30deg);
    filter: inherit;
}

.item:has(+ * + * + * + :hover) {
    transform: translateZ(calc(var(--index) * .6)) rotateY(-14deg);
    filter: inherit;
}

.items .item:active, .items .item:focus {
    width: 28vw;
    transform: translateZ(calc(var(--index) * 10));
    filter: inherit;
    z-index: 100;
    margin: 0 .45vw;
}

.items .item:active, .items .item:focus {
    width: 28vw;
    transform: translateZ(calc(var(--index) * 10));
    filter: inherit;
    z-index: 10;
    margin: 0 .45vw;
}
